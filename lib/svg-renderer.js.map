{"version":3,"sources":["../src/svg-renderer.js"],"names":[],"mappings":"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","file":"svg-renderer.js","sourcesContent":["import utils from \"./utils\";\nimport Renderer from \"./renderer\";\n\nconst SVGRenderer = function(boardElement, { hooks, options }) {\n  Renderer.call(this, boardElement, { hooks: hooks, options: options });\n  utils.addClass(boardElement, \"tenuki-svg-renderer\");\n};\n\nSVGRenderer.prototype = Object.create(Renderer.prototype);\nSVGRenderer.prototype.constructor = SVGRenderer;\n\nconst CACHED_CONSTRUCTED_LINES = {};\n\nconst constructSVG = function(renderer, boardState, { hasCoordinates, smallerStones, flatStones }) {\n  const cacheKey = [boardState.boardSize, hasCoordinates, smallerStones, flatStones].toString();\n\n  const svg = utils.createSVGElement(\"svg\");\n  const defs = utils.createSVGElement(\"defs\");\n  utils.appendElement(svg, defs);\n\n  const blackGradient = utils.createSVGElement(\"radialGradient\", {\n    attributes: {\n      id: renderer.blackGradientID,\n      cy: \"15%\",\n      r: \"50%\"\n    }\n  });\n  utils.appendElement(blackGradient, utils.createSVGElement(\"stop\", {\n    attributes: {\n      offset: \"0%\",\n      \"stop-color\": \"hsl(0, 0%, 38%)\"\n    }\n  }));\n  utils.appendElement(blackGradient, utils.createSVGElement(\"stop\", {\n    attributes: {\n      offset: \"100%\",\n      \"stop-color\": \"#39363D\"\n    }\n  }));\n  utils.appendElement(defs, blackGradient);\n\n  const whiteGradient = utils.createSVGElement(\"radialGradient\", {\n    attributes: {\n      id: renderer.whiteGradientID,\n      cy: \"15%\",\n      r: \"50%\"\n    }\n  });\n  utils.appendElement(whiteGradient, utils.createSVGElement(\"stop\", {\n    attributes: {\n      offset: \"0%\",\n      \"stop-color\": \"#FFFFFF\"\n    }\n  }));\n  utils.appendElement(whiteGradient, utils.createSVGElement(\"stop\", {\n    attributes: {\n      offset: \"100%\",\n      \"stop-color\": \"#fafdfc\"\n    }\n  }));\n  utils.appendElement(defs, whiteGradient);\n\n  const contentsContainer = utils.createSVGElement(\"g\", {\n    attributes: {\n      class: \"contents\",\n      transform: `translate(${renderer.MARGIN}, ${renderer.MARGIN})`\n    }\n  });\n  utils.appendElement(svg, contentsContainer);\n\n  let lines;\n\n  if (CACHED_CONSTRUCTED_LINES[cacheKey]) {\n    lines = utils.clone(CACHED_CONSTRUCTED_LINES[cacheKey]);\n  } else {\n    lines = utils.createSVGElement(\"g\", {\n      attributes: {\n        class: \"lines\"\n      }\n    });\n\n    for (let y = 0; y < boardState.boardSize - 1; y++) {\n      for (let x = 0; x < boardState.boardSize - 1; x++) {\n        const lineBox = utils.createSVGElement(\"rect\", {\n          attributes: {\n            y: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n            x: x * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n            width: renderer.INTERSECTION_GAP_SIZE + 1,\n            height: renderer.INTERSECTION_GAP_SIZE + 1,\n            class: \"line-box\"\n          }\n        });\n\n        utils.appendElement(lines, lineBox);\n      }\n    }\n\n    CACHED_CONSTRUCTED_LINES[cacheKey] = lines;\n  }\n\n  utils.appendElement(contentsContainer, lines);\n\n  const hoshiPoints = utils.createSVGElement(\"g\", { attributes: { class: \"hoshi\" }});\n  utils.appendElement(contentsContainer, hoshiPoints);\n\n  Renderer.hoshiPositionsFor(boardState.boardSize).forEach(h => {\n    const hoshi = utils.createSVGElement(\"circle\", {\n      attributes: {\n        class: \"hoshi\",\n        cy: h.top * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n        cx: h.left * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n        r: 2\n      }\n    });\n\n    utils.appendElement(hoshiPoints, hoshi);\n  });\n\n  if (hasCoordinates) {\n    const coordinateContainer = utils.createSVGElement(\"g\", {\n      attributes: {\n        class: \"coordinates\",\n        transform: `translate(${renderer.MARGIN}, ${renderer.MARGIN})`\n      }\n    });\n\n    for (let y = 0; y < boardState.boardSize; y++) {\n      // TODO: 16 is for the rendered height _on my browser_. not reliable...\n\n      [16/2 + 1 - (16 + 16/2 + 16/(2*2) + 16/(2*2*2)), 16/2 + 1 + (16 + 16/2) + (boardState.boardSize - 1)*(renderer.INTERSECTION_GAP_SIZE + 1)].forEach(verticalOffset => {\n        utils.appendElement(coordinateContainer, utils.createSVGElement(\"text\", {\n          text: boardState.xCoordinateFor(y),\n          attributes: {\n            \"text-anchor\": \"middle\",\n            y: verticalOffset - 0.5,\n            x: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5\n          }\n        }));\n      });\n\n\n      [-1*(16 + 16/2 + 16/(2*2)), (16 + 16/2 + 16/(2*2)) + (boardState.boardSize - 1)*(renderer.INTERSECTION_GAP_SIZE + 1)].forEach(horizontalOffset => {\n        utils.appendElement(coordinateContainer, utils.createSVGElement(\"text\", {\n          text: boardState.yCoordinateFor(y),\n          attributes: {\n            \"text-anchor\": \"middle\",\n            y: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5 + 16/(2*2),\n            x: horizontalOffset - 0.5\n          }\n        }));\n      });\n\n      utils.appendElement(svg, coordinateContainer);\n    }\n  }\n\n  const intersections = utils.createSVGElement(\"g\", { attributes: { class: \"intersections\" }});\n\n  for (let y = 0; y < boardState.boardSize; y++) {\n    for (let x = 0; x < boardState.boardSize; x++) {\n      const intersectionGroup = utils.createSVGElement(\"g\", {\n        attributes: {\n          class: \"intersection\"\n        }\n      });\n      intersectionGroup.setAttribute(\"data-intersection-y\", y);\n      intersectionGroup.setAttribute(\"data-intersection-x\", x);\n      utils.appendElement(intersections, intersectionGroup);\n\n      const intersectionInnerContainer = utils.createSVGElement(\"g\", {\n        attributes: {\n          class: \"intersection-inner-container\"\n        }\n      });\n      utils.appendElement(intersectionGroup, intersectionInnerContainer);\n\n      const intersectionBox = utils.createSVGElement(\"rect\", {\n        attributes: {\n          y: y * (renderer.INTERSECTION_GAP_SIZE + 1) - renderer.INTERSECTION_GAP_SIZE/2 - 0.5,\n          x: x * (renderer.INTERSECTION_GAP_SIZE + 1) - renderer.INTERSECTION_GAP_SIZE/2 - 0.5,\n          width: renderer.INTERSECTION_GAP_SIZE,\n          height: renderer.INTERSECTION_GAP_SIZE\n        }\n      });\n      utils.appendElement(intersectionInnerContainer, intersectionBox);\n\n      let stoneRadius = renderer.INTERSECTION_GAP_SIZE / 2;\n\n      if (smallerStones) {\n        stoneRadius -= 1;\n      }\n\n      const stoneAttributes = {\n        class: \"stone\",\n        cy: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n        cx: x * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n        r: stoneRadius\n      };\n\n      if (!flatStones) {\n        utils.appendElement(intersectionInnerContainer, utils.createSVGElement(\"circle\", {\n          attributes: {\n            class: \"stone-shadow\",\n            cy: stoneAttributes[\"cy\"] + 2,\n            cx: stoneAttributes[\"cx\"],\n            r: stoneRadius\n          }\n        }));\n      }\n\n      const intersection = utils.createSVGElement(\"circle\", {\n        attributes: stoneAttributes\n      });\n      utils.appendElement(intersectionInnerContainer, intersection);\n\n      utils.appendElement(intersectionInnerContainer, utils.createSVGElement(\"circle\", {\n        attributes: {\n          class: \"marker\",\n          cy: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n          cx: x * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n          r: 4.5\n        }\n      }));\n\n      utils.appendElement(intersectionInnerContainer, utils.createSVGElement(\"rect\", {\n        attributes: {\n          class: \"ko-marker\",\n          y: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 6 - 0.5,\n          x: x * (renderer.INTERSECTION_GAP_SIZE + 1) - 6 - 0.5,\n          width: 12,\n          height: 12\n        }\n      }));\n\n      utils.appendElement(intersectionInnerContainer, utils.createSVGElement(\"rect\", {\n        attributes: {\n          class: \"territory-marker\",\n          y: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 6,\n          x: x * (renderer.INTERSECTION_GAP_SIZE + 1) - 6,\n          width: 11,\n          height: 11\n        }\n      }));\n\n      renderer.grid[y] = renderer.grid[y] || [];\n      renderer.grid[y][x] = intersectionGroup;\n\n      renderer.addIntersectionEventListeners(intersectionGroup, y, x);\n    }\n  }\n\n  utils.appendElement(contentsContainer, intersections);\n\n  return svg;\n};\n\nSVGRenderer.prototype.generateBoard = function(boardState, { hasCoordinates, smallerStones, flatStones }) {\n  this.blackGradientID = utils.randomID(\"black-gradient\");\n  this.whiteGradientID = utils.randomID(\"white-gradient\");\n\n  const svg = constructSVG(this, boardState, { hasCoordinates, smallerStones, flatStones });\n\n  this.svgElement = svg;\n  this.svgElement.setAttribute(\"height\", this.BOARD_LENGTH);\n  this.svgElement.setAttribute(\"width\", this.BOARD_LENGTH);\n\n  return svg;\n};\n\nSVGRenderer.prototype.computeSizing = function() {\n  Renderer.prototype.computeSizing.call(this);\n\n  // In addition to the will-change re-raster in Renderer,\n  // the SVG element appears to sometimes need this to\n  // prevent blurriness on resize.\n  this.svgElement.style.transform = \"none\";\n\n  window.requestAnimationFrame(() => {\n    this.svgElement.style.transform = \"\";\n  });\n};\n\nSVGRenderer.prototype.setIntersectionClasses = function(intersectionEl, intersection, classes) {\n  if (intersectionEl.getAttribute(\"class\") !== classes.join(\" \")) {\n    intersectionEl.setAttribute(\"class\", classes.join(\" \"));\n  }\n\n  if (!this.flatStones) {\n    if (intersection.isEmpty()) {\n      intersectionEl.querySelector(\".stone\").setAttribute(\"style\", \"\");\n    } else {\n      const base = window.location.href.split('#')[0];\n      intersectionEl.querySelector(\".stone\").setAttribute(\"style\", \"fill: url(\" + base + \"#\" + this[intersection.value + \"GradientID\"] + \")\");\n    }\n  }\n};\n\nexport default SVGRenderer;\n"]}