{"version":3,"sources":["../src/eye-point.js"],"names":[],"mappings":"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","file":"eye-point.js","sourcesContent":["const EyePoint = function(boardState, intersection) {\n  this.boardState = boardState;\n  this.intersection = intersection;\n\n  Object.freeze(this);\n};\n\nEyePoint.prototype = {\n  diagonals: function() {\n    const diagonals = [];\n\n    let possibleX = [];\n    let possibleY = [];\n\n    if (this.intersection.x > 0) {\n      possibleX.push(this.intersection.x - 1);\n    }\n\n    if (this.intersection.x < (this.boardState.boardSize - 1)) {\n      possibleX.push(this.intersection.x + 1);\n    }\n\n    if (this.intersection.y > 0) {\n      possibleY.push(this.intersection.y - 1);\n    }\n\n    if (this.intersection.y < (this.boardState.boardSize - 1)) {\n      possibleY.push(this.intersection.y + 1);\n    }\n\n    possibleX.forEach(x => {\n      possibleY.forEach(y => {\n        diagonals.push(this.boardState.intersectionAt(y, x));\n      });\n    });\n\n    return diagonals;\n  },\n\n  isFalse: function() {\n    if (!this.intersection.isEmpty()) {\n      return false;\n    }\n\n    const diagonals = this.diagonals();\n    const onFirstLine = diagonals.length <= 2;\n\n    const neighbors = this.neighbors();\n    const occupiedNeighbors = neighbors.filter(i => !i.isEmpty());\n\n    if (onFirstLine && occupiedNeighbors.length < 1) {\n      return false;\n    }\n\n    if (!onFirstLine && occupiedNeighbors.length < 2) {\n      return false;\n    }\n\n    const opposingOccupiedDiagonals = diagonals.filter(d => !d.isEmpty() && !d.sameColorAs(occupiedNeighbors[0]));\n\n    if (onFirstLine) {\n      return opposingOccupiedDiagonals.length >= 1;\n    } else {\n      return opposingOccupiedDiagonals.length >= 2;\n    }\n  },\n\n  neighbors: function() {\n    return this.boardState.neighborsFor(this.intersection.y, this.intersection.x);\n  },\n\n  filledColor: function() {\n    if (!this.isFalse()) {\n      throw new Error(\"Attempting to find filled color for a non-false eye\");\n    }\n\n    return this.neighbors()[0].value;\n  }\n};\n\nexport default EyePoint;\n"]}